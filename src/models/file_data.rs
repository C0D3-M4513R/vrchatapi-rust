/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

/// FileData : 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct FileData {
    #[serde(rename = "category")]
    pub category: Category,
    #[serde(rename = "fileName")]
    pub file_name: std::sync::Arc<str>,
    #[serde(rename = "md5")]
    pub md5: std::sync::Arc<str>,
    #[serde(rename = "sizeInBytes")]
    pub size_in_bytes: i32,
    #[serde(rename = "status")]
    pub status: crate::models::FileStatus,
    #[serde(rename = "uploadId")]
    pub upload_id: std::sync::Arc<str>,
    #[serde(rename = "url")]
    pub url: std::sync::Arc<str>,
}

impl FileData {
    /// 
    pub fn new(category: Category, file_name: std::sync::Arc<str>, md5: std::sync::Arc<str>, size_in_bytes: i32, status: crate::models::FileStatus, upload_id: std::sync::Arc<str>, url: std::sync::Arc<str>) -> FileData {
        FileData {
            category,
            file_name,
            md5,
            size_in_bytes,
            status,
            upload_id,
            url,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Category {
    #[serde(rename = "multipart")]
    Multipart,
    #[serde(rename = "queued")]
    Queued,
    #[serde(rename = "simple")]
    Simple,
}

impl Default for Category {
    fn default() -> Category {
        Self::Multipart
    }
}

