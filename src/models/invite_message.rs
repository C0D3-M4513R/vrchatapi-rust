/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

/// InviteMessage : 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InviteMessage {
    #[serde(rename = "canBeUpdated")]
    pub can_be_updated: bool,
    #[serde(rename = "id")]
    pub id: std::sync::Arc<str>,
    #[serde(rename = "message")]
    pub message: std::sync::Arc<str>,
    #[serde(rename = "messageType")]
    pub message_type: crate::models::InviteMessageType,
    /// Changes to 60 when updated, although probably server-side configurable.
    #[serde(rename = "remainingCooldownMinutes")]
    pub remaining_cooldown_minutes: i32,
    #[serde(rename = "slot")]
    pub slot: i32,
    #[serde(rename = "updatedAt")]
    pub updated_at: std::sync::Arc<str>,
}

impl InviteMessage {
    /// 
    pub fn new(can_be_updated: bool, id: std::sync::Arc<str>, message: std::sync::Arc<str>, message_type: crate::models::InviteMessageType, remaining_cooldown_minutes: i32, slot: i32, updated_at: std::sync::Arc<str>) -> InviteMessage {
        InviteMessage {
            can_be_updated,
            id,
            message,
            message_type,
            remaining_cooldown_minutes,
            slot,
            updated_at,
        }
    }
}


