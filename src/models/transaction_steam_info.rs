/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

/// TransactionSteamInfo : 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionSteamInfo {
    #[serde(rename = "walletInfo")]
    pub wallet_info: Box<crate::models::TransactionSteamWalletInfo>,
    /// Steam User ID
    #[serde(rename = "steamId")]
    pub steam_id: std::sync::Arc<str>,
    /// Steam Order ID
    #[serde(rename = "orderId")]
    pub order_id: std::sync::Arc<str>,
    /// Empty
    #[serde(rename = "steamUrl")]
    pub steam_url: std::sync::Arc<str>,
    /// Steam Transaction ID, NOT the same as VRChat TransactionID
    #[serde(rename = "transId")]
    pub trans_id: std::sync::Arc<str>,
}

impl TransactionSteamInfo {
    /// 
    pub fn new(wallet_info: crate::models::TransactionSteamWalletInfo, steam_id: std::sync::Arc<str>, order_id: std::sync::Arc<str>, steam_url: std::sync::Arc<str>, trans_id: std::sync::Arc<str>) -> TransactionSteamInfo {
        TransactionSteamInfo {
            wallet_info: Box::new(wallet_info),
            steam_id,
            order_id,
            steam_url,
            trans_id,
        }
    }
}


