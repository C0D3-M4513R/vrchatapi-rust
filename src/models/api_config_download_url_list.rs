/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

/// ApiConfigDownloadUrlList : Download links for various development assets.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiConfigDownloadUrlList {
    /// Download link for legacy SDK2
    #[serde(rename = "sdk2")]
    pub sdk2: std::sync::Arc<str>,
    /// Download link for SDK3 for Avatars
    #[serde(rename = "sdk3-avatars")]
    pub sdk3_avatars: std::sync::Arc<str>,
    /// Download link for SDK3 for Worlds
    #[serde(rename = "sdk3-worlds")]
    pub sdk3_worlds: std::sync::Arc<str>,
    /// Download link for the Creator Companion
    #[serde(rename = "vcc")]
    pub vcc: std::sync::Arc<str>,
    /// Download link for ???
    #[serde(rename = "bootstrap")]
    pub bootstrap: std::sync::Arc<str>,
}

impl ApiConfigDownloadUrlList {
    /// Download links for various development assets.
    pub fn new(sdk2: std::sync::Arc<str>, sdk3_avatars: std::sync::Arc<str>, sdk3_worlds: std::sync::Arc<str>, vcc: std::sync::Arc<str>, bootstrap: std::sync::Arc<str>) -> ApiConfigDownloadUrlList {
        ApiConfigDownloadUrlList {
            sdk2,
            sdk3_avatars,
            sdk3_worlds,
            vcc,
            bootstrap,
        }
    }
}


