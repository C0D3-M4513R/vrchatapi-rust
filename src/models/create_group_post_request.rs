/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateGroupPostRequest {
    /// Post title
    #[serde(rename = "title")]
    pub title: std::sync::Arc<str>,
    /// Post text
    #[serde(rename = "text")]
    pub text: std::sync::Arc<str>,
    #[serde(rename = "imageId", skip_serializing_if = "Option::is_none")]
    pub image_id: Option<std::sync::Arc<str>>,
    /// Send notification to group members.
    #[serde(rename = "sendNotification")]
    pub send_notification: bool,
    ///  
    #[serde(rename = "roleIds", skip_serializing_if = "Option::is_none")]
    pub role_ids: Option<Vec<std::sync::Arc<str>>>,
    #[serde(rename = "visibility")]
    pub visibility: crate::models::GroupPostVisibility,
}

impl CreateGroupPostRequest {
    pub fn new(title: std::sync::Arc<str>, text: std::sync::Arc<str>, send_notification: bool, visibility: crate::models::GroupPostVisibility) -> CreateGroupPostRequest {
        CreateGroupPostRequest {
            title,
            text,
            image_id: None,
            send_notification,
            role_ids: None,
            visibility,
        }
    }
}


